name: Build and Push Docker Production Image

on:
  push:
    branches: [ main, augment-feature-dev ]
    paths:
      - 'Dockerfile'
      - 'pyproject.toml'
      - 'poetry.lock'
      - 'src/**'
      - '.github/workflows/docker-build.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'Dockerfile'
      - 'pyproject.toml'
      - 'poetry.lock'
      - 'src/**'
      - '.github/workflows/docker-build.yml'
  workflow_dispatch:  # Allow manual triggering
  release:
    types: [published]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/toolcrate

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: linux/amd64,linux/arm64

    - name: Test the built image
      run: |
        echo "Testing the built Docker image..."
        docker run --rm ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }} \
          bash -c "toolcrate --version && crontab -l || echo 'No crontab entries'"

  update-docker-compose:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/augment-feature-dev'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Update docker-compose.test.yml to use registry image
      run: |
        # Update docker-compose.test.yml to use the registry image instead of building locally
        sed -i 's|build:|# build:|g' docker-compose.test.yml
        sed -i 's|context: \.|# context: \.|g' docker-compose.test.yml
        sed -i 's|dockerfile: Dockerfile\.test|# dockerfile: Dockerfile\.test|g' docker-compose.test.yml
        sed -i "s|image: toolcrate:test|image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}|g" docker-compose.test.yml
        
        echo "Updated docker-compose.test.yml:"
        cat docker-compose.test.yml

    - name: Commit updated docker-compose.test.yml
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add docker-compose.test.yml
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          git commit -m "Update docker-compose.test.yml to use registry image [skip ci]"
          git push
        fi
