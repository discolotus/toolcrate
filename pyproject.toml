[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "toolcrate"
version = "0.1.0"
description = "A unified tool suite for music management and processing"
authors = ["User <user@example.com>"]
readme = "README.md"
license = "GPL-3.0"
homepage = "https://github.com/yourusername/toolcrate"
repository = "https://github.com/yourusername/toolcrate"
keywords = ["music", "soulseek", "shazam", "download", "batch"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Multimedia :: Sound/Audio",
]
packages = [{include = "toolcrate", from = "src"}]
include = [
    "config/*.yaml",
    "config/*.yml",
    "config/*.conf",
    "config/README.md",
    "docs/*.md",
    "bin/*",
    "install.sh",
    "Makefile"
]

[tool.poetry.dependencies]
python = ">=3.9,<4.0"
click = "^8.1.3"  # For CLI interface
pydantic = ">=1.10.2,<3.0.0"  # For data validation (compatible with shazamio)
loguru = "^0.7.0"  # For logging
pyyaml = ">=3.10,<6.0"  # For YAML configuration files (compatible with docker-compose)

# Optional dependencies for Shazam tool
pydub = {version = "^0.25.1", optional = true}
shazamio = {version = "^0.4.0", optional = true}
yt-dlp = {version = "^2023.12.30", optional = true}

# Optional dependencies for slsk-batchdl tool
docker = {version = "^7.0.0", optional = true}
docker-compose = {version = "^1.29.0", optional = true}

[tool.poetry.group.dev.dependencies]
pytest = ">=7.2.0,<9.0.0"
pytest-asyncio = ">=0.20.3,<0.24.0"
pytest-cov = "^4.1.0"
coverage = "^7.0.0"
black = "^24.0.0"
isort = "^5.12.0"
mypy = "^1.8.0"
ruff = "^0.1.0"  # Fast linter/formatter
pre-commit = "^3.6.0"  # Git hooks
setuptools = "^80.9.0"

[tool.poetry.extras]
shazam = ["pydub", "shazamio", "yt-dlp"]
slsk = ["docker", "docker-compose"]
all = ["pydub", "shazamio", "yt-dlp", "docker", "docker-compose"]

[tool.poetry.scripts]
toolcrate = "toolcrate.cli.main:main"
slsk-tool = "toolcrate.cli.wrappers:run_slsk"
shazam-tool = "toolcrate.cli.wrappers:run_shazam"
mdl-tool = "toolcrate.cli.wrappers:run_mdl"
toolcrate-identify-wishlist = "toolcrate.scripts.process_wishlist:main"
toolcrate-identify-djsets = "toolcrate.scripts.process_wishlist:main"

# Testing configuration
[tool.pytest.ini_options]
minversion = "6.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=src/toolcrate",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "asyncio: marks tests as async tests",
]

# Coverage configuration
[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/.venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

# Code formatting
[tool.black]
line-length = 88
target-version = ["py39", "py310", "py311", "py312"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | src/slsk-batchdl
  | src/Shazam-Tool
)/
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
skip_glob = ["src/slsk-batchdl/*", "src/Shazam-Tool/*"]

# Type checking
[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
exclude = [
    "src/slsk-batchdl/",
    "src/Shazam-Tool/",
    "build/",
    "dist/",
]

# Linting with Ruff
[tool.ruff]
target-version = "py39"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "src/slsk-batchdl",
    "src/Shazam-Tool",
]

[tool.ruff.per-file-ignores]
"tests/*" = ["S101"]  # Allow assert statements in tests
